// Generated by: gen-go-to-protobuf
syntax = "proto3";
package k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1;
option  go_package              = "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1";
option (dev.f110.kubeproto.k8s) = {
  domain: "apiextensions",
  version: "v1",
};

import "kube.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";

enum ConditionStatus {
  CONDITION_STATUS_TRUE    = 0 [(dev.f110.kubeproto.value) = { value: "True" }];
  CONDITION_STATUS_FALSE   = 1 [(dev.f110.kubeproto.value) = { value: "False" }];
  CONDITION_STATUS_UNKNOWN = 2 [(dev.f110.kubeproto.value) = { value: "Unknown" }];
}

enum ConversionStrategyType {
  CONVERSION_STRATEGY_TYPE_NONE    = 0 [(dev.f110.kubeproto.value) = { value: "None" }];
  CONVERSION_STRATEGY_TYPE_WEBHOOK = 1 [(dev.f110.kubeproto.value) = { value: "Webhook" }];
}

enum CustomResourceDefinitionConditionType {
  CUSTOM_RESOURCE_DEFINITION_CONDITION_TYPE_ESTABLISHED                               = 0 [(dev.f110.kubeproto.value) = { value: "Established" }];
  CUSTOM_RESOURCE_DEFINITION_CONDITION_TYPE_NAMES_ACCEPTED                            = 1;
  CUSTOM_RESOURCE_DEFINITION_CONDITION_TYPE_NON_STRUCTURAL_SCHEMA                     = 2;
  CUSTOM_RESOURCE_DEFINITION_CONDITION_TYPE_TERMINATING                               = 3 [(dev.f110.kubeproto.value) = { value: "Terminating" }];
  CUSTOM_RESOURCE_DEFINITION_CONDITION_TYPE_KUBERNETES_API_APPROVAL_POLICY_CONFORMANT = 4 [(dev.f110.kubeproto.value) = { value: "KubernetesAPIApprovalPolicyConformant" }];
}

enum ResourceScope {
  RESOURCE_SCOPE_CLUSTER    = 0 [(dev.f110.kubeproto.value) = { value: "Cluster" }];
  RESOURCE_SCOPE_NAMESPACED = 1 [(dev.f110.kubeproto.value) = { value: "Namespaced" }];
}

message ConversionRequest {
  // uid is an identifier for the individual request/response. It allows distinguishing instances of requests which are
  // otherwise identical (parallel requests, etc).
  // The UID is meant to track the round trip (request/response) between the Kubernetes API server and the webhook, not the user request.
  // It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.
  string uid = 1 [(dev.f110.kubeproto.field) = { go_name: "UID", api_field_name: "uid", inline: false }];
  // desiredAPIVersion is the version to convert given objects to. e.g. "myapi.example.com/v1"
  string desired_api_version = 2 [(dev.f110.kubeproto.field) = { go_name: "DesiredAPIVersion", api_field_name: "desiredAPIVersion", inline: false }];
  // objects is the list of custom resource objects to be converted.
  repeated .k8s.io.apimachinery.pkg.runtime.RawExtension objects = 3 [(dev.f110.kubeproto.field) = { go_name: "Objects", api_field_name: "objects", inline: false }];
}

message ConversionResponse {
  // uid is an identifier for the individual request/response.
  // This should be copied over from the corresponding `request.uid`.
  string uid = 1 [(dev.f110.kubeproto.field) = { go_name: "UID", api_field_name: "uid", inline: false }];
  // convertedObjects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
  // The webhook is expected to set `apiVersion` of these objects to the `request.desiredAPIVersion`. The list
  // must also have the same size as the input list with the same objects in the same order (equal kind, metadata.uid, metadata.name and metadata.namespace).
  // The webhook is allowed to mutate labels and annotations. Any other change to the metadata is silently ignored.
  repeated .k8s.io.apimachinery.pkg.runtime.RawExtension converted_objects = 2 [(dev.f110.kubeproto.field) = { go_name: "ConvertedObjects", api_field_name: "convertedObjects", inline: false }];
  // result contains the result of conversion with extra details if the conversion failed. `result.status` determines if
  // the conversion failed or succeeded. The `result.status` field is required and represents the success or failure of the
  // conversion. A successful conversion must set `result.status` to `Success`. A failed conversion must set
  // `result.status` to `Failure` and provide more details in `result.message` and return http status 200. The `result.message`
  // will be used to construct an error message for the end user.
  .k8s.io.apimachinery.pkg.apis.meta.v1.Status result = 3 [(dev.f110.kubeproto.field) = { go_name: "Result", api_field_name: "result", inline: false }];
}

message ConversionReview {
  .k8s.io.apimachinery.pkg.apis.meta.v1.TypeMeta type_meta = 1 [(dev.f110.kubeproto.field) = { go_name: "TypeMeta", inline: true }];
  // request describes the attributes for the conversion request.
  optional ConversionRequest request = 2 [(dev.f110.kubeproto.field) = { go_name: "Request", api_field_name: "request", inline: false }];
  // response describes the attributes for the conversion response.
  optional ConversionResponse response = 3 [(dev.f110.kubeproto.field) = { go_name: "Response", api_field_name: "response", inline: false }];
}

message CustomResourceColumnDefinition {
  // name is a human readable name for the column.
  string name = 1 [(dev.f110.kubeproto.field) = { go_name: "Name", api_field_name: "name", inline: false }];
  // type is an OpenAPI type definition for this column.
  // See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  string type = 2 [(dev.f110.kubeproto.field) = { go_name: "Type", api_field_name: "type", inline: false }];
  // format is an optional OpenAPI type definition for this column. The 'name' format is applied
  // to the primary identifier column to assist in clients identifying column is the resource name.
  // See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  optional string format = 3 [(dev.f110.kubeproto.field) = { go_name: "Format", api_field_name: "format", inline: false }];
  // description is a human readable description of this column.
  optional string description = 4 [(dev.f110.kubeproto.field) = { go_name: "Description", api_field_name: "description", inline: false }];
  // priority is an integer defining the relative importance of this column compared to others. Lower
  // numbers are considered higher priority. Columns that may be omitted in limited space scenarios
  // should be given a priority greater than 0.
  optional int32 priority = 5 [(dev.f110.kubeproto.field) = { go_name: "Priority", api_field_name: "priority", inline: false }];
  // jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against
  // each custom resource to produce the value for this column.
  string json_path = 6 [(dev.f110.kubeproto.field) = { go_name: "JSONPath", api_field_name: "jsonPath", inline: false }];
}

message CustomResourceConversion {
  // strategy specifies how custom resources are converted between versions. Allowed values are:
  // - `"None"`: The converter only change the apiVersion and would not touch any other field in the custom resource.
  // - `"Webhook"`: API Server will call to an external webhook to do the conversion. Additional information
  //   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
  ConversionStrategyType strategy = 1 [(dev.f110.kubeproto.field) = { go_name: "Strategy", api_field_name: "strategy", inline: false }];
  // webhook describes how to call the conversion webhook. Required when `strategy` is set to `"Webhook"`.
  optional WebhookConversion webhook = 2 [(dev.f110.kubeproto.field) = { go_name: "Webhook", api_field_name: "webhook", inline: false }];
}

message CustomResourceDefinition {
  // spec describes how the user wants the resources to appear
  CustomResourceDefinitionSpec spec = 3 [(dev.f110.kubeproto.field) = { go_name: "Spec", api_field_name: "spec", inline: false }];
  // status indicates the actual state of the CustomResourceDefinition
  optional CustomResourceDefinitionStatus status = 4 [(dev.f110.kubeproto.field) = { go_name: "Status", api_field_name: "status", sub_resource: true, inline: false }];

  option (dev.f110.kubeproto.kind) = {
    scope: SCOPE_CLUSTER
  };
}

message CustomResourceDefinitionCondition {
  // type is the type of the condition. Types include Established, NamesAccepted and Terminating.
  CustomResourceDefinitionConditionType type = 1 [(dev.f110.kubeproto.field) = { go_name: "Type", api_field_name: "type", inline: false }];
  // status is the status of the condition.
  // Can be True, False, Unknown.
  ConditionStatus status = 2 [(dev.f110.kubeproto.field) = { go_name: "Status", api_field_name: "status", inline: false }];
  // lastTransitionTime last time the condition transitioned from one status to another.
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time last_transition_time = 3 [(dev.f110.kubeproto.field) = { go_name: "LastTransitionTime", api_field_name: "lastTransitionTime", inline: false }];
  // reason is a unique, one-word, CamelCase reason for the condition's last transition.
  optional string reason = 4 [(dev.f110.kubeproto.field) = { go_name: "Reason", api_field_name: "reason", inline: false }];
  // message is a human-readable message indicating details about last transition.
  optional string message = 5 [(dev.f110.kubeproto.field) = { go_name: "Message", api_field_name: "message", inline: false }];
}

message CustomResourceDefinitionList {
  .k8s.io.apimachinery.pkg.apis.meta.v1.TypeMeta type_meta = 1 [(dev.f110.kubeproto.field) = { go_name: "TypeMeta", inline: true }];
  // Standard object's metadata
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta list_meta = 2 [(dev.f110.kubeproto.field) = { go_name: "ListMeta", api_field_name: "metadata", inline: false }];
  // items list individual CustomResourceDefinition objects
  repeated CustomResourceDefinition items = 3 [(dev.f110.kubeproto.field) = { go_name: "Items", api_field_name: "items", inline: false }];
}

message CustomResourceDefinitionNames {
  // plural is the plural name of the resource to serve.
  // The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
  // Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  // Must be all lowercase.
  string plural = 1 [(dev.f110.kubeproto.field) = { go_name: "Plural", api_field_name: "plural", inline: false }];
  // singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
  optional string singular = 2 [(dev.f110.kubeproto.field) = { go_name: "Singular", api_field_name: "singular", inline: false }];
  // shortNames are short names for the resource, exposed in API discovery documents,
  // and used by clients to support invocations like `kubectl get <shortname>`.
  // It must be all lowercase.
  repeated string short_names = 3 [(dev.f110.kubeproto.field) = { go_name: "ShortNames", api_field_name: "shortNames", inline: false }];
  // kind is the serialized kind of the resource. It is normally CamelCase and singular.
  // Custom resource instances will use this value as the `kind` attribute in API calls.
  string kind = 4 [(dev.f110.kubeproto.field) = { go_name: "Kind", api_field_name: "kind", inline: false }];
  // listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
  optional string list_kind = 5 [(dev.f110.kubeproto.field) = { go_name: "ListKind", api_field_name: "listKind", inline: false }];
  // categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
  // This is published in API discovery documents, and used by clients to support invocations like
  // `kubectl get all`.
  repeated string categories = 6 [(dev.f110.kubeproto.field) = { go_name: "Categories", api_field_name: "categories", inline: false }];
}

message CustomResourceDefinitionSpec {
  // group is the API group of the defined custom resource.
  // The custom resources are served under `/apis/<group>/...`.
  // Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  string group = 1 [(dev.f110.kubeproto.field) = { go_name: "Group", api_field_name: "group", inline: false }];
  // names specify the resource and kind names for the custom resource.
  CustomResourceDefinitionNames names = 2 [(dev.f110.kubeproto.field) = { go_name: "Names", api_field_name: "names", inline: false }];
  // scope indicates whether the defined custom resource is cluster- or namespace-scoped.
  // Allowed values are `Cluster` and `Namespaced`.
  ResourceScope scope = 3 [(dev.f110.kubeproto.field) = { go_name: "Scope", api_field_name: "scope", inline: false }];
  // versions is the list of all API versions of the defined custom resource.
  // Version names are used to compute the order in which served versions are listed in API discovery.
  // If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered
  // lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version),
  // then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first
  // by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing
  // major version, then minor version. An example sorted list of versions:
  // v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  repeated CustomResourceDefinitionVersion versions = 4 [(dev.f110.kubeproto.field) = { go_name: "Versions", api_field_name: "versions", inline: false }];
  // conversion defines conversion settings for the CRD.
  optional CustomResourceConversion conversion = 5 [(dev.f110.kubeproto.field) = { go_name: "Conversion", api_field_name: "conversion", inline: false }];
  // preserveUnknownFields indicates that object fields which are not specified
  // in the OpenAPI schema should be preserved when persisting to storage.
  // apiVersion, kind, metadata and known fields inside metadata are always preserved.
  // This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`.
  // See https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#field-pruning for details.
  optional bool preserve_unknown_fields = 6 [(dev.f110.kubeproto.field) = { go_name: "PreserveUnknownFields", api_field_name: "preserveUnknownFields", inline: false }];
}

message CustomResourceDefinitionStatus {
  // conditions indicate state for particular aspects of a CustomResourceDefinition
  repeated CustomResourceDefinitionCondition conditions = 1 [(dev.f110.kubeproto.field) = { go_name: "Conditions", api_field_name: "conditions", inline: false }];
  // acceptedNames are the names that are actually being used to serve discovery.
  // They may be different than the names in spec.
  CustomResourceDefinitionNames accepted_names = 2 [(dev.f110.kubeproto.field) = { go_name: "AcceptedNames", api_field_name: "acceptedNames", inline: false }];
  // storedVersions lists all versions of CustomResources that were ever persisted. Tracking these
  // versions allows a migration path for stored versions in etcd. The field is mutable
  // so a migration controller can finish a migration to another version (ensuring
  // no old objects are left in storage), and then remove the rest of the
  // versions from this list.
  // Versions may not be removed from `spec.versions` while they exist in this list.
  repeated string stored_versions = 3 [(dev.f110.kubeproto.field) = { go_name: "StoredVersions", api_field_name: "storedVersions", inline: false }];
}

message CustomResourceDefinitionVersion {
  // name is the version name, e.g. “v1”, “v2beta1”, etc.
  // The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
  string name = 1 [(dev.f110.kubeproto.field) = { go_name: "Name", api_field_name: "name", inline: false }];
  // served is a flag enabling/disabling this version from being served via REST APIs
  bool served = 2 [(dev.f110.kubeproto.field) = { go_name: "Served", api_field_name: "served", inline: false }];
  // storage indicates this version should be used when persisting custom resources to storage.
  // There must be exactly one version with storage=true.
  bool storage = 3 [(dev.f110.kubeproto.field) = { go_name: "Storage", api_field_name: "storage", inline: false }];
  // deprecated indicates this version of the custom resource API is deprecated.
  // When set to true, API requests to this version receive a warning header in the server response.
  // Defaults to false.
  optional bool deprecated = 4 [(dev.f110.kubeproto.field) = { go_name: "Deprecated", api_field_name: "deprecated", inline: false }];
  // deprecationWarning overrides the default warning returned to API clients.
  // May only be set when `deprecated` is true.
  // The default warning indicates this version is deprecated and recommends use
  // of the newest served version of equal or greater stability, if one exists.
  optional string deprecation_warning = 5 [(dev.f110.kubeproto.field) = { go_name: "DeprecationWarning", api_field_name: "deprecationWarning", inline: false }];
  // schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
  optional CustomResourceValidation schema = 6 [(dev.f110.kubeproto.field) = { go_name: "Schema", api_field_name: "schema", inline: false }];
  // subresources specify what subresources this version of the defined custom resource have.
  optional CustomResourceSubresources subresources = 7 [(dev.f110.kubeproto.field) = { go_name: "Subresources", api_field_name: "subresources", inline: false }];
  // additionalPrinterColumns specifies additional columns returned in Table output.
  // See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details.
  // If no columns are specified, a single column displaying the age of the custom resource is used.
  repeated CustomResourceColumnDefinition additional_printer_columns = 8 [(dev.f110.kubeproto.field) = { go_name: "AdditionalPrinterColumns", api_field_name: "additionalPrinterColumns", inline: false }];
}

message CustomResourceSubresourceScale {
  // specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`.
  // Only JSON paths without the array notation are allowed.
  // Must be a JSON Path under `.spec`.
  // If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
  string spec_replicas_path = 1 [(dev.f110.kubeproto.field) = { go_name: "SpecReplicasPath", api_field_name: "specReplicasPath", inline: false }];
  // statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`.
  // Only JSON paths without the array notation are allowed.
  // Must be a JSON Path under `.status`.
  // If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource
  // will default to 0.
  string status_replicas_path = 2 [(dev.f110.kubeproto.field) = { go_name: "StatusReplicasPath", api_field_name: "statusReplicasPath", inline: false }];
  // labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`.
  // Only JSON paths without the array notation are allowed.
  // Must be a JSON Path under `.status` or `.spec`.
  // Must be set to work with HorizontalPodAutoscaler.
  // The field pointed by this JSON path must be a string field (not a complex selector struct)
  // which contains a serialized label selector in string form.
  // More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
  // If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale`
  // subresource will default to the empty string.
  optional string label_selector_path = 3 [(dev.f110.kubeproto.field) = { go_name: "LabelSelectorPath", api_field_name: "labelSelectorPath", inline: false }];
}

message CustomResourceSubresourceStatus {
}

message CustomResourceSubresources {
  // status indicates the custom resource should serve a `/status` subresource.
  // When enabled:
  // 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object.
  // 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
  optional CustomResourceSubresourceStatus status = 1 [(dev.f110.kubeproto.field) = { go_name: "Status", api_field_name: "status", inline: false }];
  // scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
  optional CustomResourceSubresourceScale scale = 2 [(dev.f110.kubeproto.field) = { go_name: "Scale", api_field_name: "scale", inline: false }];
}

message CustomResourceValidation {
  // openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
  optional JSONSchemaProps open_api_v3_schema = 1 [(dev.f110.kubeproto.field) = { go_name: "OpenAPIV3Schema", api_field_name: "openAPIV3Schema", inline: false }];
}

message ExternalDocumentation {
  optional string description = 1 [(dev.f110.kubeproto.field) = { go_name: "Description", api_field_name: "description", inline: false }];
  optional string url         = 2 [(dev.f110.kubeproto.field) = { go_name: "URL", api_field_name: "url", inline: false }];
}

message JSON {
  optional bytes raw = 1 [(dev.f110.kubeproto.field) = { go_name: "Raw", api_field_name: "-", inline: false }];
}

message JSONSchemaProps {
  optional string id          = 1 [(dev.f110.kubeproto.field) = { go_name: "ID", api_field_name: "id", inline: false }];
  string          schema      = 2 [(dev.f110.kubeproto.field) = { go_name: "Schema", api_field_name: "$schema", inline: false }];
  optional string ref         = 3 [(dev.f110.kubeproto.field) = { go_name: "Ref", api_field_name: "$ref", inline: false }];
  optional string description = 4 [(dev.f110.kubeproto.field) = { go_name: "Description", api_field_name: "description", inline: false }];
  optional string type        = 5 [(dev.f110.kubeproto.field) = { go_name: "Type", api_field_name: "type", inline: false }];
  // format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
  // - bsonobjectid: a bson object ID, i.e. a 24 characters hex string
  // - uri: an URI as parsed by Golang net/url.ParseRequestURI
  // - email: an email address as parsed by Golang net/mail.ParseAddress
  // - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034].
  // - ipv4: an IPv4 IP as parsed by Golang net.ParseIP
  // - ipv6: an IPv6 IP as parsed by Golang net.ParseIP
  // - cidr: a CIDR as parsed by Golang net.ParseCIDR
  // - mac: a MAC address as parsed by Golang net.ParseMAC
  // - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$
  // - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$
  // - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$
  // - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$
  // - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041"
  // - isbn10: an ISBN10 number string like "0321751043"
  // - isbn13: an ISBN13 number string like "978-0321751041"
  // - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in
  // - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$
  // - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$
  // - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559"
  // - byte: base64 encoded binary data
  // - password: any kind of string
  // - date: a date string like "2006-01-02" as defined by full-date in RFC3339
  // - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format
  // - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
  optional string format = 6 [(dev.f110.kubeproto.field) = { go_name: "Format", api_field_name: "format", inline: false }];
  optional string title  = 7 [(dev.f110.kubeproto.field) = { go_name: "Title", api_field_name: "title", inline: false }];
  // default is a default value for undefined object fields.
  // Defaulting is a beta feature under the CustomResourceDefaulting feature gate.
  // Defaulting requires spec.preserveUnknownFields to be false.
  optional                                  JSON default          = 8 [(dev.f110.kubeproto.field) = { go_name: "Default", api_field_name: "default", inline: false }];
  optional float                            maximum               = 9 [(dev.f110.kubeproto.field) = { go_name: "Maximum", api_field_name: "maximum", inline: false }];
  optional bool                             exclusive_maximum     = 10 [(dev.f110.kubeproto.field) = { go_name: "ExclusiveMaximum", api_field_name: "exclusiveMaximum", inline: false }];
  optional float                            minimum               = 11 [(dev.f110.kubeproto.field) = { go_name: "Minimum", api_field_name: "minimum", inline: false }];
  optional bool                             exclusive_minimum     = 12 [(dev.f110.kubeproto.field) = { go_name: "ExclusiveMinimum", api_field_name: "exclusiveMinimum", inline: false }];
  optional int64                            max_length            = 13 [(dev.f110.kubeproto.field) = { go_name: "MaxLength", api_field_name: "maxLength", inline: false }];
  optional int64                            min_length            = 14 [(dev.f110.kubeproto.field) = { go_name: "MinLength", api_field_name: "minLength", inline: false }];
  optional string                           pattern               = 15 [(dev.f110.kubeproto.field) = { go_name: "Pattern", api_field_name: "pattern", inline: false }];
  optional int64                            max_items             = 16 [(dev.f110.kubeproto.field) = { go_name: "MaxItems", api_field_name: "maxItems", inline: false }];
  optional int64                            min_items             = 17 [(dev.f110.kubeproto.field) = { go_name: "MinItems", api_field_name: "minItems", inline: false }];
  optional bool                             unique_items          = 18 [(dev.f110.kubeproto.field) = { go_name: "UniqueItems", api_field_name: "uniqueItems", inline: false }];
  optional float                            multiple_of           = 19 [(dev.f110.kubeproto.field) = { go_name: "MultipleOf", api_field_name: "multipleOf", inline: false }];
  repeated                                  JSON enum             = 20 [(dev.f110.kubeproto.field) = { go_name: "Enum", api_field_name: "enum", inline: false }];
  optional int64                            max_properties        = 21 [(dev.f110.kubeproto.field) = { go_name: "MaxProperties", api_field_name: "maxProperties", inline: false }];
  optional int64                            min_properties        = 22 [(dev.f110.kubeproto.field) = { go_name: "MinProperties", api_field_name: "minProperties", inline: false }];
  repeated string                           required              = 23 [(dev.f110.kubeproto.field) = { go_name: "Required", api_field_name: "required", inline: false }];
  optional JSONSchemaPropsOrArray           items                 = 24 [(dev.f110.kubeproto.field) = { go_name: "Items", api_field_name: "items", inline: false }];
  repeated JSONSchemaProps                  all_of                = 25 [(dev.f110.kubeproto.field) = { go_name: "AllOf", api_field_name: "allOf", inline: false }];
  repeated JSONSchemaProps                  one_of                = 26 [(dev.f110.kubeproto.field) = { go_name: "OneOf", api_field_name: "oneOf", inline: false }];
  repeated JSONSchemaProps                  any_of                = 27 [(dev.f110.kubeproto.field) = { go_name: "AnyOf", api_field_name: "anyOf", inline: false }];
  optional JSONSchemaProps                  not                   = 28 [(dev.f110.kubeproto.field) = { go_name: "Not", api_field_name: "not", inline: false }];
  map<string, JSONSchemaProps>              properties            = 29 [(dev.f110.kubeproto.field) = { go_name: "Properties", api_field_name: "properties", inline: false }];
  optional JSONSchemaPropsOrBool            additional_properties = 30 [(dev.f110.kubeproto.field) = { go_name: "AdditionalProperties", api_field_name: "additionalProperties", inline: false }];
  map<string, JSONSchemaProps>              pattern_properties    = 31 [(dev.f110.kubeproto.field) = { go_name: "PatternProperties", api_field_name: "patternProperties", inline: false }];
  map<string, JSONSchemaPropsOrStringArray> dependencies          = 32 [(dev.f110.kubeproto.field) = { go_name: "Dependencies", api_field_name: "dependencies", inline: false }];
  optional JSONSchemaPropsOrBool            additional_items      = 33 [(dev.f110.kubeproto.field) = { go_name: "AdditionalItems", api_field_name: "additionalItems", inline: false }];
  map<string, JSONSchemaProps>              definitions           = 34 [(dev.f110.kubeproto.field) = { go_name: "Definitions", api_field_name: "definitions", inline: false }];
  optional ExternalDocumentation            external_docs         = 35 [(dev.f110.kubeproto.field) = { go_name: "ExternalDocs", api_field_name: "externalDocs", inline: false }];
  optional JSON                             example               = 36 [(dev.f110.kubeproto.field) = { go_name: "Example", api_field_name: "example", inline: false }];
  optional bool                             nullable              = 37 [(dev.f110.kubeproto.field) = { go_name: "Nullable", api_field_name: "nullable", inline: false }];
  // x-kubernetes-preserve-unknown-fields stops the API server
  // decoding step from pruning fields which are not specified
  // in the validation schema. This affects fields recursively,
  // but switches back to normal pruning behaviour if nested
  // properties or additionalProperties are specified in the schema.
  // This can either be true or undefined. False is forbidden.
  optional bool x_preserve_unknown_fields = 38 [(dev.f110.kubeproto.field) = { go_name: "XPreserveUnknownFields", api_field_name: "x-kubernetes-preserve-unknown-fields", inline: false }];
  // x-kubernetes-embedded-resource defines that the value is an
  // embedded Kubernetes runtime.Object, with TypeMeta and
  // ObjectMeta. The type must be object. It is allowed to further
  // restrict the embedded object. kind, apiVersion and metadata
  // are validated automatically. x-kubernetes-preserve-unknown-fields
  // is allowed to be true, but does not have to be if the object
  // is fully specified (up to kind, apiVersion, metadata).
  optional bool x_embedded_resource = 39 [(dev.f110.kubeproto.field) = { go_name: "XEmbeddedResource", api_field_name: "x-kubernetes-embedded-resource", inline: false }];
  // x-kubernetes-int-or-string specifies that this value is
  // either an integer or a string. If this is true, an empty
  // type is allowed and type as child of anyOf is permitted
  // if following one of the following patterns:
  // 1) anyOf:
  //    - type: integer
  //    - type: string
  // 2) allOf:
  //    - anyOf:
  //      - type: integer
  //      - type: string
  //    - ... zero or more
  optional bool x_int_or_string = 40 [(dev.f110.kubeproto.field) = { go_name: "XIntOrString", api_field_name: "x-kubernetes-int-or-string", inline: false }];
  // x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used
  // as the index of the map.
  // This tag MUST only be used on lists that have the "x-kubernetes-list-type"
  // extension set to "map". Also, the values specified for this attribute must
  // be a scalar typed field of the child structure (no nesting is supported).
  // The properties specified must either be required or have a default value,
  // to ensure those properties are present for all list items.
  repeated string x_list_map_keys = 41 [(dev.f110.kubeproto.field) = { go_name: "XListMapKeys", api_field_name: "x-kubernetes-list-map-keys", inline: false }];
  // x-kubernetes-list-type annotates an array to further describe its topology.
  // This extension must only be used on lists and may have 3 possible values:
  // 1) `atomic`: the list is treated as a single entity, like a scalar.
  //      Atomic lists will be entirely replaced when updated. This extension
  //      may be used on any type of list (struct, scalar, ...).
  // 2) `set`:
  //      Sets are lists that must not have multiple items with the same value. Each
  //      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
  //      array with x-kubernetes-list-type `atomic`.
  // 3) `map`:
  //      These lists are like maps in that their elements have a non-index key
  //      used to identify them. Order is preserved upon merge. The map tag
  //      must only be used on a list with elements of type object.
  // Defaults to atomic for arrays.
  optional string x_list_type = 42 [(dev.f110.kubeproto.field) = { go_name: "XListType", api_field_name: "x-kubernetes-list-type", inline: false }];
  // x-kubernetes-map-type annotates an object to further describe its topology.
  // This extension must only be used when type is object and may have 2 possible values:
  // 1) `granular`:
  //      These maps are actual maps (key-value pairs) and each fields are independent
  //      from each other (they can each be manipulated by separate actors). This is
  //      the default behaviour for all maps.
  // 2) `atomic`: the list is treated as a single entity, like a scalar.
  //      Atomic maps will be entirely replaced when updated.
  optional string x_map_type = 43 [(dev.f110.kubeproto.field) = { go_name: "XMapType", api_field_name: "x-kubernetes-map-type", inline: false }];
  // x-kubernetes-validations describes a list of validation rules written in the CEL expression language.
  // This field is an alpha-level. Using this field requires the feature gate `CustomResourceValidationExpressions` to be enabled.
  optional ValidationRules x_validations = 44 [(dev.f110.kubeproto.field) = { go_name: "XValidations", api_field_name: "x-kubernetes-validations", inline: false }];
}

message JSONSchemaPropsOrArray {
  optional JSONSchemaProps schema       = 1 [(dev.f110.kubeproto.field) = { go_name: "Schema", inline: false }];
  repeated JSONSchemaProps json_schemas = 2 [(dev.f110.kubeproto.field) = { go_name: "JSONSchemas", inline: false }];
}

message JSONSchemaPropsOrBool {
  bool                     allows = 1 [(dev.f110.kubeproto.field) = { go_name: "Allows", inline: false }];
  optional JSONSchemaProps schema = 2 [(dev.f110.kubeproto.field) = { go_name: "Schema", inline: false }];
}

message JSONSchemaPropsOrStringArray {
  optional JSONSchemaProps schema   = 1 [(dev.f110.kubeproto.field) = { go_name: "Schema", inline: false }];
  repeated string          property = 2 [(dev.f110.kubeproto.field) = { go_name: "Property", inline: false }];
}

message ServiceReference {
  // namespace is the namespace of the service.
  // Required
  string namespace = 1 [(dev.f110.kubeproto.field) = { go_name: "Namespace", api_field_name: "namespace", inline: false }];
  // name is the name of the service.
  // Required
  string name = 2 [(dev.f110.kubeproto.field) = { go_name: "Name", api_field_name: "name", inline: false }];
  // path is an optional URL path at which the webhook will be contacted.
  optional string path = 3 [(dev.f110.kubeproto.field) = { go_name: "Path", api_field_name: "path", inline: false }];
  // port is an optional service port at which the webhook will be contacted.
  // `port` should be a valid port number (1-65535, inclusive).
  // Defaults to 443 for backward compatibility.
  optional int32 port = 4 [(dev.f110.kubeproto.field) = { go_name: "Port", api_field_name: "port", inline: false }];
}

message ValidationRule {
  // Rule represents the expression which will be evaluated by CEL.
  // ref: https://github.com/google/cel-spec
  // The Rule is scoped to the location of the x-kubernetes-validations extension in the schema.
  // The `self` variable in the CEL expression is bound to the scoped value.
  // Example:
  // - Rule scoped to the root of a resource with a status subresource: {"rule": "self.status.actual <= self.spec.maxDesired"}
  // If the Rule is scoped to an object with properties, the accessible properties of the object are field selectable
  // via `self.field` and field presence can be checked via `has(self.field)`. Null valued fields are treated as
  // absent fields in CEL expressions.
  // If the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map
  // are accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map
  // are accessible via CEL macros and functions such as `self.all(...)`.
  // If the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and
  // functions.
  // If the Rule is scoped to a scalar, `self` is bound to the scalar value.
  // Examples:
  // - Rule scoped to a map of objects: {"rule": "self.components['Widget'].priority < 10"}
  // - Rule scoped to a list of integers: {"rule": "self.values.all(value, value >= 0 && value < 100)"}
  // - Rule scoped to a string value: {"rule": "self.startsWith('kube')"}
  // The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the
  // object and from any x-kubernetes-embedded-resource annotated objects. No other metadata properties are accessible.
  // Unknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL
  // expressions. This includes:
  // - Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields.
  // - Object properties where the property schema is of an "unknown type". An "unknown type" is recursively defined as:
  //   - A schema with no type and x-kubernetes-preserve-unknown-fields set to true
  //   - An array where the items schema is of an "unknown type"
  //   - An object where the additionalProperties schema is of an "unknown type"
  // Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.
  // Accessible property names are escaped according to the following rules when accessed in the expression:
  // - '__' escapes to '__underscores__'
  // - '.' escapes to '__dot__'
  // - '-' escapes to '__dash__'
  // - '/' escapes to '__slash__'
  // - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:
  // 	  "true", "false", "null", "in", "as", "break", "const", "continue", "else", "for", "function", "if",
  // 	  "import", "let", "loop", "package", "namespace", "return".
  // Examples:
  //   - Rule accessing a property named "namespace": {"rule": "self.__namespace__ > 0"}
  //   - Rule accessing a property named "x-prop": {"rule": "self.x__dash__prop > 0"}
  //   - Rule accessing a property named "redact__d": {"rule": "self.redact__underscores__d > 0"}
  // Equality on arrays with x-kubernetes-list-type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1].
  // Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:
  //   - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and
  //     non-intersecting elements in `Y` are appended, retaining their partial order.
  //   - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values
  //     are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with
  //     non-intersecting keys are appended, retaining their partial order.
  string rule = 1 [(dev.f110.kubeproto.field) = { go_name: "Rule", api_field_name: "rule", inline: false }];
  // Message represents the message displayed when validation fails. The message is required if the Rule contains
  // line breaks. The message must not contain line breaks.
  // If unset, the message is "failed rule: {Rule}".
  // e.g. "must be a URL with the host matching spec.host"
  optional string message = 2 [(dev.f110.kubeproto.field) = { go_name: "Message", api_field_name: "message", inline: false }];
  // MessageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.
  // Since messageExpression is used as a failure message, it must evaluate to a string.
  // If both message and messageExpression are present on a rule, then messageExpression will be used if validation
  // fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced
  // as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string
  // that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and
  // the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged.
  // messageExpression has access to all the same variables as the rule; the only difference is the return type.
  // Example:
  // "x must be less than max ("+string(self.max)+")"
  optional string message_expression = 3 [(dev.f110.kubeproto.field) = { go_name: "MessageExpression", api_field_name: "messageExpression", inline: false }];
}

message ValidationRules {
  repeated ValidationRule items = 1 [(dev.f110.kubeproto.field) = { go_name: "", inline: false }];
}

message WebhookClientConfig {
  // url gives the location of the webhook, in standard URL form
  // (`scheme://host:port/path`). Exactly one of `url` or `service`
  // must be specified.
  // The `host` should not refer to a service running in the cluster; use
  // the `service` field instead. The host might be resolved via external
  // DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
  // in-cluster DNS as that would be a layering violation). `host` may
  // also be an IP address.
  // Please note that using `localhost` or `127.0.0.1` as a `host` is
  // risky unless you take great care to run this webhook on all hosts
  // which run an apiserver which might need to make calls to this
  // webhook. Such installs are likely to be non-portable, i.e., not easy
  // to turn up in a new cluster.
  // The scheme must be "https"; the URL must begin with "https://".
  // A path is optional, and if present may be any string permissible in
  // a URL. You may use the path to pass an arbitrary string to the
  // webhook, for example, a cluster identifier.
  // Attempting to use a user or basic auth e.g. "user:password@" is not
  // allowed. Fragments ("#...") and query parameters ("?...") are not
  // allowed, either.
  optional string url = 1 [(dev.f110.kubeproto.field) = { go_name: "URL", api_field_name: "url", inline: false }];
  // service is a reference to the service for this webhook. Either
  // service or url must be specified.
  // If the webhook is running within the cluster, then you should use `service`.
  optional ServiceReference service = 2 [(dev.f110.kubeproto.field) = { go_name: "Service", api_field_name: "service", inline: false }];
  // caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
  // If unspecified, system trust roots on the apiserver are used.
  optional bytes c_a_bundle = 3 [(dev.f110.kubeproto.field) = { go_name: "CABundle", api_field_name: "caBundle", inline: false }];
}

message WebhookConversion {
  // clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
  optional WebhookClientConfig client_config = 1 [(dev.f110.kubeproto.field) = { go_name: "ClientConfig", api_field_name: "clientConfig", inline: false }];
  // conversionReviewVersions is an ordered list of preferred `ConversionReview`
  // versions the Webhook expects. The API server will use the first version in
  // the list which it supports. If none of the versions specified in this list
  // are supported by API server, conversion will fail for the custom resource.
  // If a persisted Webhook configuration specifies allowed versions and does not
  // include any versions known to the API Server, calls to the webhook will fail.
  repeated string conversion_review_versions = 2 [(dev.f110.kubeproto.field) = { go_name: "ConversionReviewVersions", api_field_name: "conversionReviewVersions", inline: false }];
}
