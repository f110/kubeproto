// Generated by: gen-go-to-protobuf
syntax = "proto3";
package k8s.io.apimachinery.pkg.runtime;
option  go_package = "k8s.io/apimachinery/pkg/runtime";

import "kube.proto";

enum Identifier {
  IDENTIFIER_NOOP = 0 [(dev.f110.kubeproto.value) = { value: "noop" }];
}

message RawExtension {
  // Raw is the underlying serialization of this object.
  optional bytes raw = 1 [(dev.f110.kubeproto.field) = { go_name: "Raw", api_field_name: "-", inline: false }];
}

message TypeMeta {
  optional string api_version = 1 [(dev.f110.kubeproto.field) = { go_name: "APIVersion", api_field_name: "apiVersion", inline: false }];
  optional string kind        = 2 [(dev.f110.kubeproto.field) = { go_name: "Kind", api_field_name: "kind", inline: false }];
}

message Unknown {
  TypeMeta type_meta = 1 [(dev.f110.kubeproto.field) = { go_name: "TypeMeta", inline: true }];
  // Raw will hold the complete serialized object which couldn't be matched
  // with a registered type. Most likely, nothing should be done with this
  // except for passing it through the system.
  optional bytes raw = 2 [(dev.f110.kubeproto.field) = { go_name: "Raw", api_field_name: "-", inline: false }];
  // ContentEncoding is encoding used to encode 'Raw' data.
  // Unspecified means no encoding.
  string content_encoding = 3 [(dev.f110.kubeproto.field) = { go_name: "ContentEncoding", inline: false }];
  // ContentType  is serialization method used to serialize 'Raw'.
  // Unspecified means ContentTypeJSON.
  string content_type = 4 [(dev.f110.kubeproto.field) = { go_name: "ContentType", inline: false }];
}
