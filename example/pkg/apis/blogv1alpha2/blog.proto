syntax = "proto3";
package example.apis.blogv1alpha2;
option  go_package              = "go.f110.dev/kubeproto/example/pkg/apis/blogv1alpha2";
option (dev.f110.kubeproto.k8s) = {
  domain: "f110.dev"
  sub_group: "blog"
  version: "v1alpha2"
};

import "kube.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";

message Blog {
  BlogSpec   spec   = 1;
  BlogStatus status = 2;

  option (dev.f110.kubeproto.kind) = {
    scope: SCOPE_CLUSTER
  };
}

message BlogSpec {
  // blog title
  string                                             title           = 1;
  k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector author_selector = 2;
  // A list of all tags.
  // A tag is one of metadata of the post.
  repeated string   tags                                             = 3;
  repeated Category categories                                       = 4;
  optional k8s.io.api.core.v1.SecretKeySelector service_account_json = 5 [(dev.f110.kubeproto.field) = { go_name: "ServiceAccountJSON", api_field_name: "serviceAccountJSON" }];
  LabelSelector                                 editor_selector      = 6;
}

message BlogStatus {
  bool     ready                                                   = 1;
  int64    observed_generation                                     = 2;
  string   url                                                     = 3;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time observed_time = 4;
}

message Category {
  string name        = 1;
  string description = 2;
}

enum PostPhase {
  POST_PHASE_CREATED      = 0;
  POST_PHASE_PROVISIONING = 1;
  POST_PHASE_PROVISIONED  = 2;
}

message Post {
  PostSpec   spec   = 1;
  PostStatus status = 2;

  option (dev.f110.kubeproto.kind) = {
    additional_printer_columns: { name: "ready", type: "string", json_path: ".status.ready", description: "Ready", format: "byte", priority: 0 }
    additional_printer_columns: { name: "age", type: "date", json_path: ".metadata.creationTimestamp", description: "age", format: "date", priority: 0 }
  };
}

message PostSpec {
  string subject = 1;
}

message PostStatus {
  bool      ready = 1;
  PostPhase phase = 2;
}

message Author {
  AuthorSpec   spec   = 1;
  AuthorStatus status = 2;

  option (dev.f110.kubeproto.kind) = {
  };
}

message AuthorSpec {}

message AuthorStatus {}

message LabelSelector {
  k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector pod_selector     = 1 [(dev.f110.kubeproto.field) = { inline: true }];
  optional                                           string namespace = 2;
}
