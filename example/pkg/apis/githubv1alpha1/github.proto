syntax = "proto3";
package example.apis.githubv1alpha1;
option  go_package              = "go.f110.dev/kubeproto/example/pkg/apis/githubv1alpha1";
option (dev.f110.kubeproto.k8s) = {
  domain: "f110.dev",
  sub_group: "grafana",
  version: "v1alpha1",
};

import "kube.proto";

message Grafana {
  GrafanaSpec   spec   = 1;
  GrafanaStatus status = 2;

  option (dev.f110.kubeproto.kind) = {
  };
}

message GrafanaSpec {
  optional string admin_user    = 1;
  string          api_version   = 2 [(dev.f110.kubeproto.field) = { go_name: "APIVersion" }];
  repeated string feature_gates = 3;
  repeated Volume volumes       = 4;
}

message Volume {
  string name = 1;
}

enum GrafanaPhase {
  GRAFANA_PHASE_CREATED  = 0 [(dev.f110.kubeproto.value) = { value: "Created" }];
  GRAFANA_PHASE_CREATING = 1 [(dev.f110.kubeproto.value) = { value: "Creating" }];
}

enum GrafanaUserPhase {
  GRAFANA_USER_PHASE_CREATED = 0;
}

message GrafanaStatus {
  int64        observed_generation = 1;
  GrafanaPhase phase               = 2;
}

message GrafanaUser {
  GrafanaUserSpec   spec   = 1;
  GrafanaUserStatus status = 2;

  option (dev.f110.kubeproto.kind) = {
  };
}

message GrafanaUserSpec {
  string email = 1;
  // admin indicates that the user has the privilege
  bool admin = 2;
}

message GrafanaUserStatus {
  bool ready = 1;
}